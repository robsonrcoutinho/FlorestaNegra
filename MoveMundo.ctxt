#BlueJ class context
comment0.params=larguraTela\ alturaTela\ larguraTotal
comment0.target=MoveMundo(int,\ int,\ int)
comment0.text=\r\n\ Construtor\ da\ classe\ MoveMundo\r\n\ Recebe\ como\ par\u00E2metro\ um\ inteiro\ referente\ a\ largura\r\n\ outro\ referente\ a\ altura,\ e\ um\ a\ largura\ totalDoMundo\r\n\ ele\ passa\ as\ caracter\u00EDsticas\ a\ super\ classe\ World\r\n\ passa\ dois\ par\u00E2metros\ extras,\ 1\ que\ se\ refere\ aos\ pixels\ 1x1\r\n\ e\ false,\ que\ torna\ o\ mundo\ ilimitado.\r\n\ @param\ larguraTela\ -\ largura\ da\ tela,\ alturaTela\ -\ altura\ da\ tela,\ larguraTotal\ -\ largura\ simulada.\r\n
comment1.params=personagemPrincipal\ x\ y\ distanciaDaTela
comment1.target=void\ adicionarPersonagemPrincipal(greenfoot.Actor,\ int,\ int,\ int)
comment1.text=\r\n\ \ \ Este\ m\u00E9todo,\ recebe\ o\ personagem\ principal,\r\n\ \ \ adiciona\ ele\ nas\ cordenadas\ x\ e\ y\r\n\ \ \ e\ seta\ o\ a\ distancia\ limite\ entre\ o\ personagem\ e\ a\ tela\r\n\ \ \ para\ dar\ o\ in\u00EDcio\ a\ movimenta\u00E7\u00E3o\ do\ cen\u00E1rio\r\n\ \ \ @param\ personagemPrincipal\ -\ X\ e\ Y\ -\ cordenada\ X\ e\ Y\ na\ qual\ o\ persoangem\ principal\ ser\u00E1\ setado,\ distanciaDaTela\ -\ distancia\ da\ tela\ que\ deve\ ser\ mantida.\ \ \ \r\n
comment10.params=
comment10.target=boolean\ verificaDirecaoPersonagem()
comment10.text=\r\n\ verifica\ a\ direcao\ em\ que\ o\ personagem\r\n\ se\ move.\r\n\ @return\ boolean\ -\ retorna\ a\ dire\u00E7\u00E3o\ do\ personagem,\ true\ significa\ direita,\ false\ esquerda.\ \r\n
comment11.params=
comment11.target=void\ reiniciarParcialmente()
comment2.params=objeto\ x\ y\ eMovivel
comment2.target=void\ adicionarObjeto(greenfoot.Actor,\ int,\ int,\ boolean)
comment2.text=\r\n\ Este\ m\u00E9todo\ adicina\ um\ objeto\ ao\ mundo\r\n\ nas\ cordenadas\ x\ e\ y\r\n\ caso\ ele\ seja\ mov\u00EDvel\ ele\ \u00E9\ guardado\r\n\ na\ cole\u00E7\u00E3o\ de\ atores\ mov\u00EDveis\r\n\ @param\ objeto\ -\ ator\ a\ ser\ adicionado\ o\ mundo,x\ e\ y\ s\u00E3o\ as\ cornedadas\ na\ qual\ o\ personagem\ ser\u00E1\ adicionado,\r\n\ eMovivel\ -\ true\ caso\ o\ personagem\ seja\ mov\u00EDvel.\r\n
comment3.params=objeto
comment3.target=void\ removerObjeto(greenfoot.Actor)
comment3.text=\r\n\ Este\ metodo\ primeiramente\ remove\ um\ objeto\ da\ lista\ de\ atores\ mov\u00EDveis\r\n\ ap\u00F3s\ estre\ procedimento\ ele\ remove\ o\ objeto\ do\ mundo\r\n\ @param\ objeto\ -\ ator\ a\ ser\ removido\ do\ mundo.\r\n
comment4.params=
comment4.target=void\ moverMundo()
comment4.text=\r\n\ Este\ m\u00E9todo\ executa\ a\ movimenta\u00E7\u00E3o\ dos\ atores\ mov\u00EDveis\r\n\ Se\ o\ personagem\ atingir\ o\ final\ dos\ cen\u00E1rios.\r\n\ Ele\ seta\ o\ personagem\ a\ posi\u00E7\u00E3o\ limite\r\n\ Se\ o\ personagem\ n\u00E3o\ atingiu\ nenhum\ limite\ e\ ultrapassou\r\n\ o\ limite\ de\ distancia\ da\ tela,\ ele\ calcula\ os\ passos\ andados\ \r\n\ e\ seta\ o\ personagem\ a\ distancia\ limite.\r\n\ caso\ o\ limite+osPassosAndados\ forem\ iguais\ ao\ tamanho\ do\ mundo\r\n\ o\ personagem\ \u00E9\ liberado\ para\ atingir\ os\ limites\ da\ tela\r\n
comment5.params=
comment5.target=greenfoot.Actor\ getPersonagemPrincipal()
comment5.text=\r\n\ Este\ m\u00E9todo\ retorna\ o\ personagem\ principal\r\n\ @return\ Actor\ -\ retorna\ o\ ator\ principal.\r\n
comment6.params=
comment6.target=void\ calculaPassosAndados()
comment6.text=\r\n\ Este\ m\u00E9todo\ \u00E9\ respons\u00E1vel\ por\ calcular\r\n\ os\ passos\ andados\ do\ personagem\r\n
comment7.params=
comment7.target=void\ calculaPassosVolta()
comment7.text=\r\n\ Este\ m\u00E9todo\ calcula\ os\ passos\ de\ volta\ do\ personagem\r\n
comment8.params=
comment8.target=int\ distanciaAMoverAtores()
comment8.text=\r\n\ Este\ m\u00E9todo\ calcula\ a\ distancia\r\n\ a\ mover\ os\ personagens,\ com\ base\ na\ distancia\r\n\ \ desvio\ \ do\ personagem\ na\ cordena\ x,\ en\ rela\u00E7\u00E3o\r\n\ \ ao\ limite\ imposto\ pela\ distancia\ da\ tela\r\n\ \ @return\ int\ -\ distancia\ na\ qual\ os\ atores\ devem\ ser\ movidos\ caso\ o\ personagem\ esteja\ andando\ em\ dire\u00E7\u00E3o\ a\ direita.\r\n
comment9.params=
comment9.target=int\ distanciaAMoverAtoresVolta()
comment9.text=\r\n\ Este\ m\u00E9todo\ calcula\ a\ distancia\ a\ mover\r\n\ os\ personagens\ caso\ o\ personagem\ volte\r\n\ em\ rela\u00E7\u00E3o\ ao\ cen\u00E1rio.\r\n\ @return\ int\ -\ distancia\ na\ qual\ os\ atores\ moviveis\ devem\ ser\ movidos\ caso\ o\ personagem\ esteja\ voltando\ no\ cen\u00E1rio.\r\n
numComments=12
